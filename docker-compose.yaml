services:
  # gate-keeper:
  #   container_name: go-admin
  #   image: go-admin:latest
  #   # build:
  #   #   context: .
  #   #   dockerfile: Dockerfile
  #   #   args:
  #   #     CACHE_BUST: ${CACHE_BUST}
  #   restart: always
  #   environment:
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     DB_USER: ${DB_USER}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     DB_NAME: ${DB_NAME}
  #     APPLICATION_PORT: ${APPLICATION_PORT}
  #   ports:
  #     - '8080:8080'
  #   expose:
  #     - '8080'
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1;"]
  #     interval: 19s
  #     timeout: 5s
  #     retries: 10
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - go-admin-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

  apidoc:
    image: styled-swagger-ui:latest
    restart: always
    ports:
      - '8081:80'
    expose:
      - '8081'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./apidoc:/usr/share/nginx/html/apidoc

  redis:
    image: redis
    volumes:
      - go-admin-redis-data:/data
    ports:
      - '6379:6379'
    expose:
      - '6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  go-admin-postgres-data:
    driver: local
  go-admin-redis-data:
    driver: local